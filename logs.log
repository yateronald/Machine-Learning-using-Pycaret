2024-01-09 10:53:26,833:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-01-09 10:53:26,833:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-01-09 10:53:26,833:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-01-09 10:53:26,833:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-01-09 10:53:57,761:INFO:PyCaret ClassificationExperiment
2024-01-09 10:53:57,761:INFO:Logging name: Experiemce 1
2024-01-09 10:53:57,761:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-01-09 10:53:57,762:INFO:version 3.2.0
2024-01-09 10:53:57,762:INFO:Initializing setup()
2024-01-09 10:53:57,762:INFO:self.USI: fe12
2024-01-09 10:53:57,762:INFO:self._variable_keys: {'n_jobs_param', 'USI', 'fold_shuffle_param', 'X', 'log_plots_param', 'exp_name_log', 'memory', '_available_plots', 'pipeline', 'y', 'target_param', 'html_param', 'is_multiclass', 'X_train', 'y_train', 'seed', 'fold_groups_param', 'idx', 'fix_imbalance', 'fold_generator', 'exp_id', '_ml_usecase', 'gpu_n_jobs_param', 'gpu_param', 'logging_param', 'data', 'y_test', 'X_test'}
2024-01-09 10:53:57,762:INFO:Checking environment
2024-01-09 10:53:57,762:INFO:python_version: 3.9.18
2024-01-09 10:53:57,762:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2024-01-09 10:53:57,762:INFO:machine: AMD64
2024-01-09 10:53:57,762:INFO:platform: Windows-10-10.0.22631-SP0
2024-01-09 10:53:57,762:INFO:Memory: svmem(total=42638589952, available=25838366720, percent=39.4, used=16800223232, free=25838366720)
2024-01-09 10:53:57,762:INFO:Physical Core: 14
2024-01-09 10:53:57,762:INFO:Logical Core: 20
2024-01-09 10:53:57,762:INFO:Checking libraries
2024-01-09 10:53:57,762:INFO:System:
2024-01-09 10:53:57,762:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2024-01-09 10:53:57,762:INFO:executable: C:\Users\flora\anaconda3\envs\dl2\python.exe
2024-01-09 10:53:57,762:INFO:   machine: Windows-10-10.0.22631-SP0
2024-01-09 10:53:57,763:INFO:PyCaret required dependencies:
2024-01-09 10:53:57,852:INFO:                 pip: 23.3.1
2024-01-09 10:53:57,852:INFO:          setuptools: 68.2.2
2024-01-09 10:53:57,852:INFO:             pycaret: 3.2.0
2024-01-09 10:53:57,852:INFO:             IPython: 8.15.0
2024-01-09 10:53:57,852:INFO:          ipywidgets: 8.1.1
2024-01-09 10:53:57,852:INFO:                tqdm: 4.66.1
2024-01-09 10:53:57,852:INFO:               numpy: 1.24.3
2024-01-09 10:53:57,852:INFO:              pandas: 1.5.3
2024-01-09 10:53:57,852:INFO:              jinja2: 3.1.2
2024-01-09 10:53:57,853:INFO:               scipy: 1.10.1
2024-01-09 10:53:57,853:INFO:              joblib: 1.3.2
2024-01-09 10:53:57,853:INFO:             sklearn: 1.2.2
2024-01-09 10:53:57,853:INFO:                pyod: 1.1.2
2024-01-09 10:53:57,853:INFO:            imblearn: 0.11.0
2024-01-09 10:53:57,853:INFO:   category_encoders: 2.6.3
2024-01-09 10:53:57,853:INFO:            lightgbm: 4.2.0
2024-01-09 10:53:57,853:INFO:               numba: 0.58.1
2024-01-09 10:53:57,853:INFO:            requests: 2.31.0
2024-01-09 10:53:57,853:INFO:          matplotlib: 3.6.0
2024-01-09 10:53:57,853:INFO:          scikitplot: 0.3.7
2024-01-09 10:53:57,853:INFO:         yellowbrick: 1.5
2024-01-09 10:53:57,853:INFO:              plotly: 5.18.0
2024-01-09 10:53:57,853:INFO:    plotly-resampler: Not installed
2024-01-09 10:53:57,853:INFO:             kaleido: 0.2.1
2024-01-09 10:53:57,853:INFO:           schemdraw: 0.15
2024-01-09 10:53:57,853:INFO:         statsmodels: 0.14.1
2024-01-09 10:53:57,853:INFO:              sktime: 0.21.1
2024-01-09 10:53:57,853:INFO:               tbats: 1.1.3
2024-01-09 10:53:57,853:INFO:            pmdarima: 2.0.4
2024-01-09 10:53:57,853:INFO:              psutil: 5.9.0
2024-01-09 10:53:57,853:INFO:          markupsafe: 2.1.1
2024-01-09 10:53:57,853:INFO:             pickle5: Not installed
2024-01-09 10:53:57,853:INFO:         cloudpickle: 3.0.0
2024-01-09 10:53:57,854:INFO:         deprecation: 2.1.0
2024-01-09 10:53:57,854:INFO:              xxhash: 3.4.1
2024-01-09 10:53:57,854:INFO:           wurlitzer: 3.0.3
2024-01-09 10:53:57,854:INFO:PyCaret optional dependencies:
2024-01-09 10:53:57,933:INFO:                shap: Not installed
2024-01-09 10:53:57,933:INFO:           interpret: Not installed
2024-01-09 10:53:57,933:INFO:                umap: Not installed
2024-01-09 10:53:57,933:INFO:     ydata_profiling: Not installed
2024-01-09 10:53:57,933:INFO:  explainerdashboard: Not installed
2024-01-09 10:53:57,933:INFO:             autoviz: Not installed
2024-01-09 10:53:57,933:INFO:           fairlearn: Not installed
2024-01-09 10:53:57,933:INFO:          deepchecks: Not installed
2024-01-09 10:53:57,933:INFO:             xgboost: 2.0.3
2024-01-09 10:53:57,933:INFO:            catboost: 1.2.2
2024-01-09 10:53:57,933:INFO:              kmodes: Not installed
2024-01-09 10:53:57,933:INFO:             mlxtend: Not installed
2024-01-09 10:53:57,933:INFO:       statsforecast: Not installed
2024-01-09 10:53:57,933:INFO:        tune_sklearn: Not installed
2024-01-09 10:53:57,933:INFO:                 ray: Not installed
2024-01-09 10:53:57,933:INFO:            hyperopt: Not installed
2024-01-09 10:53:57,933:INFO:              optuna: Not installed
2024-01-09 10:53:57,933:INFO:               skopt: Not installed
2024-01-09 10:53:57,933:INFO:              mlflow: Not installed
2024-01-09 10:53:57,933:INFO:              gradio: Not installed
2024-01-09 10:53:57,933:INFO:             fastapi: Not installed
2024-01-09 10:53:57,933:INFO:             uvicorn: Not installed
2024-01-09 10:53:57,933:INFO:              m2cgen: Not installed
2024-01-09 10:53:57,933:INFO:           evidently: Not installed
2024-01-09 10:53:57,933:INFO:               fugue: Not installed
2024-01-09 10:53:57,933:INFO:           streamlit: Not installed
2024-01-09 10:53:57,933:INFO:             prophet: Not installed
2024-01-09 10:53:57,933:INFO:None
2024-01-09 10:53:57,934:INFO:Set up data.
2024-01-09 10:53:58,057:INFO:Set up folding strategy.
2024-01-09 10:53:58,057:INFO:Set up train/test split.
2024-01-09 10:53:58,097:INFO:Set up index.
2024-01-09 10:53:58,098:INFO:Assigning column types.
2024-01-09 10:53:58,104:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-01-09 10:53:58,146:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-01-09 10:53:58,150:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-01-09 10:53:58,179:INFO:Soft dependency imported: xgboost: 2.0.3
2024-01-09 10:53:58,181:INFO:Soft dependency imported: catboost: 1.2.2
2024-01-09 10:53:58,574:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-01-09 10:53:58,574:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-01-09 10:53:58,603:INFO:Soft dependency imported: xgboost: 2.0.3
2024-01-09 10:53:58,605:INFO:Soft dependency imported: catboost: 1.2.2
2024-01-09 10:53:58,606:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-01-09 10:53:58,644:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-01-09 10:53:58,669:INFO:Soft dependency imported: xgboost: 2.0.3
2024-01-09 10:53:58,756:INFO:Soft dependency imported: catboost: 1.2.2
2024-01-09 10:53:58,805:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-01-09 10:53:58,831:INFO:Soft dependency imported: xgboost: 2.0.3
2024-01-09 10:53:58,835:INFO:Soft dependency imported: catboost: 1.2.2
2024-01-09 10:53:58,836:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-01-09 10:53:58,917:INFO:Soft dependency imported: xgboost: 2.0.3
2024-01-09 10:53:58,919:INFO:Soft dependency imported: catboost: 1.2.2
2024-01-09 10:53:58,992:INFO:Soft dependency imported: xgboost: 2.0.3
2024-01-09 10:53:58,994:INFO:Soft dependency imported: catboost: 1.2.2
2024-01-09 10:53:58,996:INFO:Preparing preprocessing pipeline...
2024-01-09 10:53:58,997:INFO:Set up label encoding.
2024-01-09 10:53:58,997:INFO:Set up simple imputation.
2024-01-09 10:53:59,004:INFO:Set up encoding of ordinal features.
2024-01-09 10:53:59,006:INFO:Set up encoding of categorical features.
2024-01-09 10:53:59,007:INFO:Set up column name cleaning.
2024-01-09 10:53:59,766:INFO:Finished creating preprocessing pipeline.
2024-01-09 10:53:59,790:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\flora\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'education-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImp...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-01-09 10:53:59,790:INFO:Creating final display dataframe.
2024-01-09 10:54:00,538:INFO:Setup _display_container:                     Description                                   Value
0                    Session id                                     603
1                        Target                                  income
2                   Target type                              Multiclass
3                Target mapping  <=50K: 0, <=50K.: 1, >50K: 2, >50K.: 3
4           Original data shape                             (48842, 15)
5        Transformed data shape                             (48842, 67)
6   Transformed train set shape                             (34189, 67)
7    Transformed test set shape                             (14653, 67)
8              Ordinal features                                       1
9              Numeric features                                       6
10         Categorical features                                       8
11     Rows with missing values                                    2.5%
12                   Preprocess                                    True
13              Imputation type                                  simple
14           Numeric imputation                                    mean
15       Categorical imputation                                    mode
16     Maximum one-hot encoding                                      25
17              Encoding method                                    None
18               Fold Generator                         StratifiedKFold
19                  Fold Number                                      10
20                     CPU Jobs                                      -1
21                      Use GPU                                   False
22               Log Experiment                             CometLogger
23              Experiment Name                            Experiemce 1
24                          USI                                    fe12
2024-01-09 10:54:00,661:INFO:Soft dependency imported: xgboost: 2.0.3
2024-01-09 10:54:00,663:INFO:Soft dependency imported: catboost: 1.2.2
2024-01-09 10:54:00,748:INFO:Soft dependency imported: xgboost: 2.0.3
2024-01-09 10:54:00,750:INFO:Soft dependency imported: catboost: 1.2.2
2024-01-09 10:54:00,751:INFO:Logging experiment in loggers
2024-01-09 10:54:06,885:INFO:SubProcess save_model() called ==================================
2024-01-09 10:54:06,926:INFO:Initializing save_model()
2024-01-09 10:54:06,926:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\flora\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'education-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImp...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\flora\AppData\Local\Temp\tmp5g4g0xs0\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\flora\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'education-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImp...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-01-09 10:54:06,926:INFO:Adding model into prep_pipe
2024-01-09 10:54:06,927:WARNING:Only Model saved as it was a pipeline.
2024-01-09 10:54:06,937:INFO:C:\Users\flora\AppData\Local\Temp\tmp5g4g0xs0\Transformation Pipeline.pkl saved in current working directory
2024-01-09 10:54:06,952:INFO:Pipeline(memory=FastMemory(location=C:\Users\flora\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'education-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImp...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-01-09 10:54:06,952:INFO:save_model() successfully completed......................................
2024-01-09 10:54:07,028:INFO:SubProcess save_model() end ==================================
2024-01-09 10:54:07,305:INFO:setup() successfully completed in 3.05s...............
2024-01-09 10:58:18,357:INFO:Initializing compare_models()
2024-01-09 10:58:18,357:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-01-09 10:58:18,358:INFO:Checking exceptions
2024-01-09 10:58:18,367:INFO:Preparing display monitor
2024-01-09 10:58:18,412:INFO:Initializing Logistic Regression
2024-01-09 10:58:18,412:INFO:Total runtime is 0.0 minutes
2024-01-09 10:58:18,415:INFO:SubProcess create_model() called ==================================
2024-01-09 10:58:18,416:INFO:Initializing create_model()
2024-01-09 10:58:18,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 10:58:18,416:INFO:Checking exceptions
2024-01-09 10:58:18,416:INFO:Importing libraries
2024-01-09 10:58:18,416:INFO:Copying training dataset
2024-01-09 10:58:18,429:INFO:Defining folds
2024-01-09 10:58:18,430:INFO:Declaring metric variables
2024-01-09 10:58:18,433:INFO:Importing untrained model
2024-01-09 10:58:18,438:INFO:Logistic Regression Imported successfully
2024-01-09 10:58:18,443:INFO:Starting cross validation
2024-01-09 10:58:18,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 10:58:28,241:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:28,261:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:28,274:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:28,281:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:29,646:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:29,668:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:29,680:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:29,686:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:30,557:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:30,576:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:30,576:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:30,588:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:30,591:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:30,597:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:30,604:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:30,610:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:30,988:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,006:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,018:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:31,027:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,030:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,044:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,053:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:31,061:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,153:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,171:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,183:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:31,193:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,285:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,302:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,311:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:31,317:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,473:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,489:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:31,502:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:31,512:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:32,808:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:32,843:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:32,854:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:32,860:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:32,889:INFO:Calculating mean and std
2024-01-09 10:58:32,891:INFO:Creating metrics dataframe
2024-01-09 10:58:32,896:INFO:Uploading results into container
2024-01-09 10:58:32,897:INFO:Uploading model into container now
2024-01-09 10:58:32,897:INFO:_master_model_container: 1
2024-01-09 10:58:32,898:INFO:_display_container: 2
2024-01-09 10:58:32,898:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=603, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-01-09 10:58:32,898:INFO:create_model() successfully completed......................................
2024-01-09 10:58:32,984:INFO:SubProcess create_model() end ==================================
2024-01-09 10:58:32,984:INFO:Creating metrics dataframe
2024-01-09 10:58:32,991:INFO:Initializing K Neighbors Classifier
2024-01-09 10:58:32,991:INFO:Total runtime is 0.24297937154769897 minutes
2024-01-09 10:58:32,994:INFO:SubProcess create_model() called ==================================
2024-01-09 10:58:32,994:INFO:Initializing create_model()
2024-01-09 10:58:32,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 10:58:32,995:INFO:Checking exceptions
2024-01-09 10:58:32,995:INFO:Importing libraries
2024-01-09 10:58:32,995:INFO:Copying training dataset
2024-01-09 10:58:33,021:INFO:Defining folds
2024-01-09 10:58:33,021:INFO:Declaring metric variables
2024-01-09 10:58:33,027:INFO:Importing untrained model
2024-01-09 10:58:33,032:INFO:K Neighbors Classifier Imported successfully
2024-01-09 10:58:33,040:INFO:Starting cross validation
2024-01-09 10:58:33,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 10:58:47,654:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,696:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,714:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,733:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,744:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,765:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,785:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,808:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,813:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,816:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,924:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,963:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,963:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,975:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,983:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:47,989:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,003:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,018:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,021:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,028:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,033:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,036:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,050:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,067:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,080:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,084:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,095:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,180:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,214:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,258:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:48,335:INFO:Calculating mean and std
2024-01-09 10:58:48,338:INFO:Creating metrics dataframe
2024-01-09 10:58:48,349:INFO:Uploading results into container
2024-01-09 10:58:48,350:INFO:Uploading model into container now
2024-01-09 10:58:48,351:INFO:_master_model_container: 2
2024-01-09 10:58:48,351:INFO:_display_container: 2
2024-01-09 10:58:48,351:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-01-09 10:58:48,351:INFO:create_model() successfully completed......................................
2024-01-09 10:58:48,483:INFO:SubProcess create_model() end ==================================
2024-01-09 10:58:48,484:INFO:Creating metrics dataframe
2024-01-09 10:58:48,506:INFO:Initializing Naive Bayes
2024-01-09 10:58:48,506:INFO:Total runtime is 0.5015564044316609 minutes
2024-01-09 10:58:48,514:INFO:SubProcess create_model() called ==================================
2024-01-09 10:58:48,514:INFO:Initializing create_model()
2024-01-09 10:58:48,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 10:58:48,515:INFO:Checking exceptions
2024-01-09 10:58:48,515:INFO:Importing libraries
2024-01-09 10:58:48,515:INFO:Copying training dataset
2024-01-09 10:58:48,539:INFO:Defining folds
2024-01-09 10:58:48,540:INFO:Declaring metric variables
2024-01-09 10:58:48,548:INFO:Importing untrained model
2024-01-09 10:58:48,557:INFO:Naive Bayes Imported successfully
2024-01-09 10:58:48,574:INFO:Starting cross validation
2024-01-09 10:58:48,579:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 10:58:51,457:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,474:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,487:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,498:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,513:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,529:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:51,531:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,532:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,535:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,536:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,549:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,549:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,553:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,561:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,583:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:51,595:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,648:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,684:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,692:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,694:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,708:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,709:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,717:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,725:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:51,727:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:51,727:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,730:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,740:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,743:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,745:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:51,749:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,753:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,762:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,768:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,779:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:58:51,794:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:51,845:INFO:Calculating mean and std
2024-01-09 10:58:51,847:INFO:Creating metrics dataframe
2024-01-09 10:58:51,853:INFO:Uploading results into container
2024-01-09 10:58:51,855:INFO:Uploading model into container now
2024-01-09 10:58:51,855:INFO:_master_model_container: 3
2024-01-09 10:58:51,856:INFO:_display_container: 2
2024-01-09 10:58:51,856:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-01-09 10:58:51,857:INFO:create_model() successfully completed......................................
2024-01-09 10:58:51,981:INFO:SubProcess create_model() end ==================================
2024-01-09 10:58:51,983:INFO:Creating metrics dataframe
2024-01-09 10:58:52,004:INFO:Initializing Decision Tree Classifier
2024-01-09 10:58:52,005:INFO:Total runtime is 0.5598797996838887 minutes
2024-01-09 10:58:52,012:INFO:SubProcess create_model() called ==================================
2024-01-09 10:58:52,013:INFO:Initializing create_model()
2024-01-09 10:58:52,013:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 10:58:52,013:INFO:Checking exceptions
2024-01-09 10:58:52,013:INFO:Importing libraries
2024-01-09 10:58:52,014:INFO:Copying training dataset
2024-01-09 10:58:52,045:INFO:Defining folds
2024-01-09 10:58:52,047:INFO:Declaring metric variables
2024-01-09 10:58:52,056:INFO:Importing untrained model
2024-01-09 10:58:52,064:INFO:Decision Tree Classifier Imported successfully
2024-01-09 10:58:52,081:INFO:Starting cross validation
2024-01-09 10:58:52,086:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 10:58:56,251:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,301:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,335:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,346:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,348:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,355:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,367:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,387:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,393:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,395:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,406:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,415:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,429:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,430:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,433:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,439:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,440:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,442:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,457:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,458:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,471:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,481:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,485:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,485:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,493:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,517:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,519:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,524:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,527:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,558:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:58:56,620:INFO:Calculating mean and std
2024-01-09 10:58:56,623:INFO:Creating metrics dataframe
2024-01-09 10:58:56,629:INFO:Uploading results into container
2024-01-09 10:58:56,630:INFO:Uploading model into container now
2024-01-09 10:58:56,631:INFO:_master_model_container: 4
2024-01-09 10:58:56,631:INFO:_display_container: 2
2024-01-09 10:58:56,632:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=603, splitter='best')
2024-01-09 10:58:56,633:INFO:create_model() successfully completed......................................
2024-01-09 10:58:56,806:INFO:SubProcess create_model() end ==================================
2024-01-09 10:58:56,807:INFO:Creating metrics dataframe
2024-01-09 10:58:56,832:INFO:Initializing SVM - Linear Kernel
2024-01-09 10:58:56,833:INFO:Total runtime is 0.6403446118036905 minutes
2024-01-09 10:58:56,841:INFO:SubProcess create_model() called ==================================
2024-01-09 10:58:56,841:INFO:Initializing create_model()
2024-01-09 10:58:56,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 10:58:56,842:INFO:Checking exceptions
2024-01-09 10:58:56,843:INFO:Importing libraries
2024-01-09 10:58:56,843:INFO:Copying training dataset
2024-01-09 10:58:56,871:INFO:Defining folds
2024-01-09 10:58:56,872:INFO:Declaring metric variables
2024-01-09 10:58:56,881:INFO:Importing untrained model
2024-01-09 10:58:56,892:INFO:SVM - Linear Kernel Imported successfully
2024-01-09 10:58:56,909:INFO:Starting cross validation
2024-01-09 10:58:56,915:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 10:59:22,414:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-09 10:59:22,460:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:22,760:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:22,820:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:22,862:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:23,142:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-09 10:59:23,177:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:23,246:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:23,291:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:23,332:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:23,997:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-09 10:59:24,016:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:24,093:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:24,123:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:24,261:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:24,688:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-09 10:59:24,718:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:24,734:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-09 10:59:24,757:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:24,783:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:24,800:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:24,822:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:24,834:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:24,845:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:24,867:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,172:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-09 10:59:25,189:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,224:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,243:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:25,260:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,307:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-09 10:59:25,323:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,356:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,375:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:25,387:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,414:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-09 10:59:25,429:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,468:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,491:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:25,510:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,543:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-09 10:59:25,556:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,584:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

tric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-09 10:59:25,600:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:25,601:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,615:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,635:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,654:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:25,664:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:25,725:INFO:Calculating mean and std
2024-01-09 10:59:25,728:INFO:Creating metrics dataframe
2024-01-09 10:59:25,735:INFO:Uploading results into container
2024-01-09 10:59:25,736:INFO:Uploading model into container now
2024-01-09 10:59:25,737:INFO:_master_model_container: 5
2024-01-09 10:59:25,737:INFO:_display_container: 2
2024-01-09 10:59:25,738:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=603, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-01-09 10:59:25,738:INFO:create_model() successfully completed......................................
2024-01-09 10:59:25,846:INFO:SubProcess create_model() end ==================================
2024-01-09 10:59:25,846:INFO:Creating metrics dataframe
2024-01-09 10:59:25,865:INFO:Initializing Ridge Classifier
2024-01-09 10:59:25,866:INFO:Total runtime is 1.124221122264862 minutes
2024-01-09 10:59:25,871:INFO:SubProcess create_model() called ==================================
2024-01-09 10:59:25,872:INFO:Initializing create_model()
2024-01-09 10:59:25,872:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 10:59:25,872:INFO:Checking exceptions
2024-01-09 10:59:25,872:INFO:Importing libraries
2024-01-09 10:59:25,872:INFO:Copying training dataset
2024-01-09 10:59:25,887:INFO:Defining folds
2024-01-09 10:59:25,888:INFO:Declaring metric variables
2024-01-09 10:59:25,892:INFO:Importing untrained model
2024-01-09 10:59:25,900:INFO:Ridge Classifier Imported successfully
2024-01-09 10:59:25,911:INFO:Starting cross validation
2024-01-09 10:59:25,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 10:59:29,568:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-09 10:59:30,044:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-09 10:59:30,053:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-09 10:59:30,054:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,063:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,069:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,116:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,197:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,205:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-09 10:59:30,223:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:30,321:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,339:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-09 10:59:30,348:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,354:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,369:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,397:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,412:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-09 10:59:30,431:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,445:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,454:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-09 10:59:30,487:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,503:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,518:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,519:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,523:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:30,543:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:30,607:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:30,619:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,633:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-09 10:59:30,654:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,658:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,677:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,688:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,713:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:30,732:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,736:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,751:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-09 10:59:30,756:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-09 10:59:30,764:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:30,766:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,777:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,779:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,801:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,810:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,885:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:30,916:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 10:59:30,923:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:30,936:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:31,019:INFO:Calculating mean and std
2024-01-09 10:59:31,023:INFO:Creating metrics dataframe
2024-01-09 10:59:31,028:INFO:Uploading results into container
2024-01-09 10:59:31,029:INFO:Uploading model into container now
2024-01-09 10:59:31,030:INFO:_master_model_container: 6
2024-01-09 10:59:31,030:INFO:_display_container: 2
2024-01-09 10:59:31,030:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=603, solver='auto',
                tol=0.0001)
2024-01-09 10:59:31,030:INFO:create_model() successfully completed......................................
2024-01-09 10:59:31,297:INFO:SubProcess create_model() end ==================================
2024-01-09 10:59:31,297:INFO:Creating metrics dataframe
2024-01-09 10:59:31,319:INFO:Initializing Random Forest Classifier
2024-01-09 10:59:31,319:INFO:Total runtime is 1.2151043375333148 minutes
2024-01-09 10:59:31,327:INFO:SubProcess create_model() called ==================================
2024-01-09 10:59:31,328:INFO:Initializing create_model()
2024-01-09 10:59:31,328:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 10:59:31,328:INFO:Checking exceptions
2024-01-09 10:59:31,329:INFO:Importing libraries
2024-01-09 10:59:31,329:INFO:Copying training dataset
2024-01-09 10:59:31,351:INFO:Defining folds
2024-01-09 10:59:31,351:INFO:Declaring metric variables
2024-01-09 10:59:31,358:INFO:Importing untrained model
2024-01-09 10:59:31,365:INFO:Random Forest Classifier Imported successfully
2024-01-09 10:59:31,377:INFO:Starting cross validation
2024-01-09 10:59:31,382:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 10:59:42,120:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,130:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,173:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,187:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,249:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,302:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,306:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,325:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,352:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,388:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,394:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,402:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,430:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,432:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,445:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,450:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,454:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,467:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,470:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,484:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,488:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,498:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,507:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,510:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,521:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,530:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,543:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,550:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,561:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,577:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:42,600:INFO:Calculating mean and std
2024-01-09 10:59:42,602:INFO:Creating metrics dataframe
2024-01-09 10:59:42,605:INFO:Uploading results into container
2024-01-09 10:59:42,606:INFO:Uploading model into container now
2024-01-09 10:59:42,606:INFO:_master_model_container: 7
2024-01-09 10:59:42,607:INFO:_display_container: 2
2024-01-09 10:59:42,607:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=603, verbose=0, warm_start=False)
2024-01-09 10:59:42,607:INFO:create_model() successfully completed......................................
2024-01-09 10:59:42,690:INFO:SubProcess create_model() end ==================================
2024-01-09 10:59:42,690:INFO:Creating metrics dataframe
2024-01-09 10:59:42,702:INFO:Initializing Quadratic Discriminant Analysis
2024-01-09 10:59:42,703:INFO:Total runtime is 1.4048386216163633 minutes
2024-01-09 10:59:42,708:INFO:SubProcess create_model() called ==================================
2024-01-09 10:59:42,708:INFO:Initializing create_model()
2024-01-09 10:59:42,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 10:59:42,709:INFO:Checking exceptions
2024-01-09 10:59:42,709:INFO:Importing libraries
2024-01-09 10:59:42,709:INFO:Copying training dataset
2024-01-09 10:59:42,723:INFO:Defining folds
2024-01-09 10:59:42,723:INFO:Declaring metric variables
2024-01-09 10:59:42,727:INFO:Importing untrained model
2024-01-09 10:59:42,732:INFO:Quadratic Discriminant Analysis Imported successfully
2024-01-09 10:59:42,739:INFO:Starting cross validation
2024-01-09 10:59:42,742:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 10:59:44,044:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-09 10:59:44,044:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-09 10:59:44,046:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-09 10:59:44,048:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-09 10:59:44,050:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-09 10:59:44,052:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-09 10:59:44,054:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-09 10:59:44,055:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-09 10:59:44,059:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-09 10:59:44,065:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-09 10:59:44,360:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,364:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,371:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,379:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,385:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,385:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,385:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,386:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,388:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,392:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,393:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,397:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,397:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,409:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,413:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,414:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,416:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,418:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,418:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,423:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,425:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,428:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,430:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,437:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,446:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,446:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,446:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,451:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,452:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,452:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:44,493:INFO:Calculating mean and std
2024-01-09 10:59:44,495:INFO:Creating metrics dataframe
2024-01-09 10:59:44,498:INFO:Uploading results into container
2024-01-09 10:59:44,499:INFO:Uploading model into container now
2024-01-09 10:59:44,499:INFO:_master_model_container: 8
2024-01-09 10:59:44,499:INFO:_display_container: 2
2024-01-09 10:59:44,500:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-01-09 10:59:44,500:INFO:create_model() successfully completed......................................
2024-01-09 10:59:44,594:INFO:SubProcess create_model() end ==================================
2024-01-09 10:59:44,594:INFO:Creating metrics dataframe
2024-01-09 10:59:44,607:INFO:Initializing Ada Boost Classifier
2024-01-09 10:59:44,607:INFO:Total runtime is 1.4365746935208636 minutes
2024-01-09 10:59:44,611:INFO:SubProcess create_model() called ==================================
2024-01-09 10:59:44,611:INFO:Initializing create_model()
2024-01-09 10:59:44,611:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 10:59:44,611:INFO:Checking exceptions
2024-01-09 10:59:44,612:INFO:Importing libraries
2024-01-09 10:59:44,612:INFO:Copying training dataset
2024-01-09 10:59:44,626:INFO:Defining folds
2024-01-09 10:59:44,626:INFO:Declaring metric variables
2024-01-09 10:59:44,630:INFO:Importing untrained model
2024-01-09 10:59:44,635:INFO:Ada Boost Classifier Imported successfully
2024-01-09 10:59:44,644:INFO:Starting cross validation
2024-01-09 10:59:44,647:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 10:59:48,988:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:48,992:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,011:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,015:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,021:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,033:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,033:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,037:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,043:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,044:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,051:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,056:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,061:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,066:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,069:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,073:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,078:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,087:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,089:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,092:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,093:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,095:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,101:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,104:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,106:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,108:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,119:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,121:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,122:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,134:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 10:59:49,163:INFO:Calculating mean and std
2024-01-09 10:59:49,164:INFO:Creating metrics dataframe
2024-01-09 10:59:49,167:INFO:Uploading results into container
2024-01-09 10:59:49,168:INFO:Uploading model into container now
2024-01-09 10:59:49,168:INFO:_master_model_container: 9
2024-01-09 10:59:49,168:INFO:_display_container: 2
2024-01-09 10:59:49,168:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=603)
2024-01-09 10:59:49,168:INFO:create_model() successfully completed......................................
2024-01-09 10:59:49,242:INFO:SubProcess create_model() end ==================================
2024-01-09 10:59:49,242:INFO:Creating metrics dataframe
2024-01-09 10:59:49,256:INFO:Initializing Gradient Boosting Classifier
2024-01-09 10:59:49,257:INFO:Total runtime is 1.5140729983647663 minutes
2024-01-09 10:59:49,261:INFO:SubProcess create_model() called ==================================
2024-01-09 10:59:49,262:INFO:Initializing create_model()
2024-01-09 10:59:49,262:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 10:59:49,262:INFO:Checking exceptions
2024-01-09 10:59:49,262:INFO:Importing libraries
2024-01-09 10:59:49,262:INFO:Copying training dataset
2024-01-09 10:59:49,272:INFO:Defining folds
2024-01-09 10:59:49,273:INFO:Declaring metric variables
2024-01-09 10:59:49,277:INFO:Importing untrained model
2024-01-09 10:59:49,281:INFO:Gradient Boosting Classifier Imported successfully
2024-01-09 10:59:49,288:INFO:Starting cross validation
2024-01-09 10:59:49,291:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 11:00:38,849:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:38,873:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:38,891:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:38,918:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:38,926:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:38,935:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:38,962:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:38,978:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,021:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,069:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,088:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,105:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,129:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,139:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,171:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,200:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,229:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,232:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,241:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,277:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,280:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,280:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,316:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,324:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,712:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,753:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,788:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,946:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:39,978:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:40,018:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:40,072:INFO:Calculating mean and std
2024-01-09 11:00:40,073:INFO:Creating metrics dataframe
2024-01-09 11:00:40,081:INFO:Uploading results into container
2024-01-09 11:00:40,082:INFO:Uploading model into container now
2024-01-09 11:00:40,082:INFO:_master_model_container: 10
2024-01-09 11:00:40,083:INFO:_display_container: 2
2024-01-09 11:00:40,084:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=603, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-01-09 11:00:40,084:INFO:create_model() successfully completed......................................
2024-01-09 11:00:40,243:INFO:SubProcess create_model() end ==================================
2024-01-09 11:00:40,243:INFO:Creating metrics dataframe
2024-01-09 11:00:40,265:INFO:Initializing Linear Discriminant Analysis
2024-01-09 11:00:40,266:INFO:Total runtime is 2.3642343163490294 minutes
2024-01-09 11:00:40,275:INFO:SubProcess create_model() called ==================================
2024-01-09 11:00:40,276:INFO:Initializing create_model()
2024-01-09 11:00:40,276:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 11:00:40,276:INFO:Checking exceptions
2024-01-09 11:00:40,276:INFO:Importing libraries
2024-01-09 11:00:40,277:INFO:Copying training dataset
2024-01-09 11:00:40,301:INFO:Defining folds
2024-01-09 11:00:40,302:INFO:Declaring metric variables
2024-01-09 11:00:40,310:INFO:Importing untrained model
2024-01-09 11:00:40,319:INFO:Linear Discriminant Analysis Imported successfully
2024-01-09 11:00:40,353:INFO:Starting cross validation
2024-01-09 11:00:40,357:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 11:00:44,033:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,084:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,133:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,175:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,211:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,216:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,225:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,253:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,253:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,255:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,258:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,265:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,267:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,273:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,274:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,281:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,291:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,293:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,299:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 11:00:44,300:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,300:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,310:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,312:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,318:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 11:00:44,319:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,331:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,336:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,344:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,345:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,347:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,356:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,368:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:00:44,424:INFO:Calculating mean and std
2024-01-09 11:00:44,427:INFO:Creating metrics dataframe
2024-01-09 11:00:44,438:INFO:Uploading results into container
2024-01-09 11:00:44,439:INFO:Uploading model into container now
2024-01-09 11:00:44,440:INFO:_master_model_container: 11
2024-01-09 11:00:44,440:INFO:_display_container: 2
2024-01-09 11:00:44,442:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-01-09 11:00:44,442:INFO:create_model() successfully completed......................................
2024-01-09 11:00:44,589:INFO:SubProcess create_model() end ==================================
2024-01-09 11:00:44,590:INFO:Creating metrics dataframe
2024-01-09 11:00:44,617:INFO:Initializing Extra Trees Classifier
2024-01-09 11:00:44,618:INFO:Total runtime is 2.4367672284444173 minutes
2024-01-09 11:00:44,630:INFO:SubProcess create_model() called ==================================
2024-01-09 11:00:44,631:INFO:Initializing create_model()
2024-01-09 11:00:44,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 11:00:44,631:INFO:Checking exceptions
2024-01-09 11:00:44,632:INFO:Importing libraries
2024-01-09 11:00:44,632:INFO:Copying training dataset
2024-01-09 11:00:44,659:INFO:Defining folds
2024-01-09 11:00:44,659:INFO:Declaring metric variables
2024-01-09 11:00:44,666:INFO:Importing untrained model
2024-01-09 11:00:44,673:INFO:Extra Trees Classifier Imported successfully
2024-01-09 11:00:44,689:INFO:Starting cross validation
2024-01-09 11:00:44,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 11:01:04,265:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,266:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,294:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,305:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,313:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,313:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,342:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,344:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,349:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,350:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,403:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,416:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,463:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,463:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,490:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,490:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,518:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,521:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,527:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,527:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,550:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,550:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,556:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,569:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,572:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,578:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,584:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,586:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,602:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,624:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:04,661:INFO:Calculating mean and std
2024-01-09 11:01:04,662:INFO:Creating metrics dataframe
2024-01-09 11:01:04,666:INFO:Uploading results into container
2024-01-09 11:01:04,667:INFO:Uploading model into container now
2024-01-09 11:01:04,667:INFO:_master_model_container: 12
2024-01-09 11:01:04,667:INFO:_display_container: 2
2024-01-09 11:01:04,669:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=603, verbose=0, warm_start=False)
2024-01-09 11:01:04,669:INFO:create_model() successfully completed......................................
2024-01-09 11:01:04,748:INFO:SubProcess create_model() end ==================================
2024-01-09 11:01:04,749:INFO:Creating metrics dataframe
2024-01-09 11:01:04,760:INFO:Initializing Extreme Gradient Boosting
2024-01-09 11:01:04,760:INFO:Total runtime is 2.772458779811859 minutes
2024-01-09 11:01:04,763:INFO:SubProcess create_model() called ==================================
2024-01-09 11:01:04,764:INFO:Initializing create_model()
2024-01-09 11:01:04,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 11:01:04,764:INFO:Checking exceptions
2024-01-09 11:01:04,764:INFO:Importing libraries
2024-01-09 11:01:04,764:INFO:Copying training dataset
2024-01-09 11:01:04,773:INFO:Defining folds
2024-01-09 11:01:04,775:INFO:Declaring metric variables
2024-01-09 11:01:04,780:INFO:Importing untrained model
2024-01-09 11:01:04,785:INFO:Extreme Gradient Boosting Imported successfully
2024-01-09 11:01:04,793:INFO:Starting cross validation
2024-01-09 11:01:04,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 11:01:10,906:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:10,930:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:10,959:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:10,987:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:10,994:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,012:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,014:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,016:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,016:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,033:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,035:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,045:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,045:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,053:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,055:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,058:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,061:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,074:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,075:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,077:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,086:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,091:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,096:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,097:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,104:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,115:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,119:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,135:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,144:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,152:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:11,180:INFO:Calculating mean and std
2024-01-09 11:01:11,181:INFO:Creating metrics dataframe
2024-01-09 11:01:11,184:INFO:Uploading results into container
2024-01-09 11:01:11,185:INFO:Uploading model into container now
2024-01-09 11:01:11,185:INFO:_master_model_container: 13
2024-01-09 11:01:11,185:INFO:_display_container: 2
2024-01-09 11:01:11,186:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-01-09 11:01:11,186:INFO:create_model() successfully completed......................................
2024-01-09 11:01:11,262:INFO:SubProcess create_model() end ==================================
2024-01-09 11:01:11,262:INFO:Creating metrics dataframe
2024-01-09 11:01:11,276:INFO:Initializing Light Gradient Boosting Machine
2024-01-09 11:01:11,276:INFO:Total runtime is 2.881053332487742 minutes
2024-01-09 11:01:11,279:INFO:SubProcess create_model() called ==================================
2024-01-09 11:01:11,281:INFO:Initializing create_model()
2024-01-09 11:01:11,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 11:01:11,281:INFO:Checking exceptions
2024-01-09 11:01:11,281:INFO:Importing libraries
2024-01-09 11:01:11,281:INFO:Copying training dataset
2024-01-09 11:01:11,289:INFO:Defining folds
2024-01-09 11:01:11,289:INFO:Declaring metric variables
2024-01-09 11:01:11,294:INFO:Importing untrained model
2024-01-09 11:01:11,299:INFO:Light Gradient Boosting Machine Imported successfully
2024-01-09 11:01:11,308:INFO:Starting cross validation
2024-01-09 11:01:11,311:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 11:01:21,222:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,249:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,270:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,273:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,294:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,311:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,330:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,342:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,348:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,352:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,367:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,390:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,394:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,409:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,418:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,430:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,439:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,461:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,481:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,504:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,516:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,523:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,534:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:21,553:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:22,118:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:22,134:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:22,136:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:22,156:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:22,157:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:22,173:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:22,197:INFO:Calculating mean and std
2024-01-09 11:01:22,198:INFO:Creating metrics dataframe
2024-01-09 11:01:22,202:INFO:Uploading results into container
2024-01-09 11:01:22,203:INFO:Uploading model into container now
2024-01-09 11:01:22,204:INFO:_master_model_container: 14
2024-01-09 11:01:22,204:INFO:_display_container: 2
2024-01-09 11:01:22,205:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=603, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-01-09 11:01:22,205:INFO:create_model() successfully completed......................................
2024-01-09 11:01:22,287:INFO:SubProcess create_model() end ==================================
2024-01-09 11:01:22,288:INFO:Creating metrics dataframe
2024-01-09 11:01:22,301:INFO:Initializing CatBoost Classifier
2024-01-09 11:01:22,301:INFO:Total runtime is 3.0648144006729123 minutes
2024-01-09 11:01:22,305:INFO:SubProcess create_model() called ==================================
2024-01-09 11:01:22,305:INFO:Initializing create_model()
2024-01-09 11:01:22,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 11:01:22,305:INFO:Checking exceptions
2024-01-09 11:01:22,305:INFO:Importing libraries
2024-01-09 11:01:22,306:INFO:Copying training dataset
2024-01-09 11:01:22,318:INFO:Defining folds
2024-01-09 11:01:22,319:INFO:Declaring metric variables
2024-01-09 11:01:22,323:INFO:Importing untrained model
2024-01-09 11:01:22,326:INFO:CatBoost Classifier Imported successfully
2024-01-09 11:01:22,331:INFO:Starting cross validation
2024-01-09 11:01:22,333:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 11:01:44,085:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,094:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,101:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,115:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,116:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,118:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,134:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,138:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,145:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,156:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,158:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,165:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,170:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,171:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,176:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,179:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,186:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,192:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,193:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,200:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,203:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,205:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,216:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,229:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:44,263:INFO:Calculating mean and std
2024-01-09 11:01:44,264:INFO:Creating metrics dataframe
2024-01-09 11:01:44,267:INFO:Uploading results into container
2024-01-09 11:01:44,267:INFO:Uploading model into container now
2024-01-09 11:01:44,268:INFO:_master_model_container: 15
2024-01-09 11:01:44,268:INFO:_display_container: 2
2024-01-09 11:01:44,268:INFO:<catboost.core.CatBoostClassifier object at 0x00000242225507F0>
2024-01-09 11:01:44,268:INFO:create_model() successfully completed......................................
2024-01-09 11:01:44,342:INFO:SubProcess create_model() end ==================================
2024-01-09 11:01:44,342:INFO:Creating metrics dataframe
2024-01-09 11:01:44,354:INFO:Initializing Dummy Classifier
2024-01-09 11:01:44,355:INFO:Total runtime is 3.4323850512504577 minutes
2024-01-09 11:01:44,358:INFO:SubProcess create_model() called ==================================
2024-01-09 11:01:44,358:INFO:Initializing create_model()
2024-01-09 11:01:44,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242224DF250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 11:01:44,360:INFO:Checking exceptions
2024-01-09 11:01:44,360:INFO:Importing libraries
2024-01-09 11:01:44,360:INFO:Copying training dataset
2024-01-09 11:01:44,374:INFO:Defining folds
2024-01-09 11:01:44,374:INFO:Declaring metric variables
2024-01-09 11:01:44,379:INFO:Importing untrained model
2024-01-09 11:01:44,383:INFO:Dummy Classifier Imported successfully
2024-01-09 11:01:44,390:INFO:Starting cross validation
2024-01-09 11:01:44,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-09 11:01:45,462:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,463:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,477:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,482:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,485:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,490:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,490:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 11:01:45,496:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 11:01:45,497:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,498:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,501:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,501:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,511:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,514:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 11:01:45,521:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 11:01:45,521:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,523:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,527:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,528:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,533:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,535:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 11:01:45,539:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,541:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,542:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,545:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,546:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,550:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,552:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,554:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 11:01:45,556:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 11:01:45,560:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,560:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 11:01:45,565:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,565:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,565:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,567:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,573:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 11:01:45,577:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-09 11:01:45,578:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,582:WARNING:C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K.') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-09 11:01:45,601:INFO:Calculating mean and std
2024-01-09 11:01:45,602:INFO:Creating metrics dataframe
2024-01-09 11:01:45,605:INFO:Uploading results into container
2024-01-09 11:01:45,605:INFO:Uploading model into container now
2024-01-09 11:01:45,606:INFO:_master_model_container: 16
2024-01-09 11:01:45,606:INFO:_display_container: 2
2024-01-09 11:01:45,606:INFO:DummyClassifier(constant=None, random_state=603, strategy='prior')
2024-01-09 11:01:45,606:INFO:create_model() successfully completed......................................
2024-01-09 11:01:45,683:INFO:SubProcess create_model() end ==================================
2024-01-09 11:01:45,683:INFO:Creating metrics dataframe
2024-01-09 11:01:45,708:INFO:Initializing create_model()
2024-01-09 11:01:45,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=603, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-09 11:01:45,709:INFO:Checking exceptions
2024-01-09 11:01:45,712:INFO:Importing libraries
2024-01-09 11:01:45,712:INFO:Copying training dataset
2024-01-09 11:01:45,723:INFO:Defining folds
2024-01-09 11:01:45,724:INFO:Declaring metric variables
2024-01-09 11:01:45,724:INFO:Importing untrained model
2024-01-09 11:01:45,724:INFO:Declaring custom model
2024-01-09 11:01:45,725:INFO:Gradient Boosting Classifier Imported successfully
2024-01-09 11:01:45,727:INFO:Cross validation set to False
2024-01-09 11:01:45,727:INFO:Fitting Model
2024-01-09 11:02:14,136:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=603, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-01-09 11:02:14,137:INFO:create_model() successfully completed......................................
2024-01-09 11:02:14,228:INFO:Creating Dashboard logs
2024-01-09 11:02:14,232:INFO:Model: Gradient Boosting Classifier
2024-01-09 11:02:21,034:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 603, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-01-09 11:02:21,576:INFO:Initializing predict_model()
2024-01-09 11:02:21,576:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002421DC610D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=603, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000242220F9700>)
2024-01-09 11:02:21,576:INFO:Checking exceptions
2024-01-09 11:02:21,576:INFO:Preloading libraries
2024-01-09 11:02:41,457:INFO:Creating Dashboard logs
2024-01-09 11:02:41,462:INFO:Model: Light Gradient Boosting Machine
2024-01-09 11:02:45,778:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 603, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-01-09 11:03:11,181:INFO:Creating Dashboard logs
2024-01-09 11:03:11,193:INFO:Model: Extreme Gradient Boosting
2024-01-09 11:03:16,869:INFO:Logged params: {'objective': 'binary:logistic', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 603, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-01-09 11:03:42,527:INFO:Creating Dashboard logs
2024-01-09 11:03:42,535:INFO:Model: Ada Boost Classifier
2024-01-09 11:03:48,392:INFO:Logged params: {'algorithm': 'SAMME.R', 'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 603}
2024-01-09 11:04:12,881:INFO:Creating Dashboard logs
2024-01-09 11:04:12,897:INFO:Model: Linear Discriminant Analysis
2024-01-09 11:04:18,544:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-01-09 11:04:42,794:INFO:Creating Dashboard logs
2024-01-09 11:04:42,799:INFO:Model: Ridge Classifier
2024-01-09 11:04:47,184:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 603, 'solver': 'auto', 'tol': 0.0001}
2024-01-09 11:05:10,470:INFO:Creating Dashboard logs
2024-01-09 11:05:10,488:INFO:Model: Random Forest Classifier
2024-01-09 11:05:17,521:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 603, 'verbose': 0, 'warm_start': False}
2024-01-09 11:05:42,279:INFO:Creating Dashboard logs
2024-01-09 11:05:42,288:INFO:Model: Logistic Regression
2024-01-09 11:05:48,078:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 603, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-01-09 11:06:12,991:INFO:Creating Dashboard logs
2024-01-09 11:06:12,999:INFO:Model: Naive Bayes
2024-01-09 11:06:18,456:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-01-09 11:06:44,428:INFO:Creating Dashboard logs
2024-01-09 11:06:44,435:INFO:Model: Dummy Classifier
2024-01-09 11:06:49,202:INFO:Logged params: {'constant': None, 'random_state': 603, 'strategy': 'prior'}
2024-01-09 11:07:09,334:INFO:Creating Dashboard logs
2024-01-09 11:07:09,346:INFO:Model: Extra Trees Classifier
2024-01-09 11:07:15,025:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 603, 'verbose': 0, 'warm_start': False}
2024-01-09 11:07:42,925:INFO:Creating Dashboard logs
2024-01-09 11:07:42,932:INFO:Model: K Neighbors Classifier
2024-01-09 11:07:49,270:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-01-09 11:08:17,585:INFO:Creating Dashboard logs
2024-01-09 11:08:17,597:INFO:Model: Decision Tree Classifier
2024-01-09 11:08:23,622:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 603, 'splitter': 'best'}
2024-01-09 11:08:45,405:INFO:Creating Dashboard logs
2024-01-09 11:08:45,409:INFO:Model: CatBoost Classifier
2024-01-09 11:08:50,636:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
  File "C:\Users\flora\anaconda3\envs\dl2\lib\site-packages\catboost\core.py", line 3377, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2024-01-09 11:08:50,652:INFO:Logged params: {}
2024-01-09 11:09:10,923:INFO:Creating Dashboard logs
2024-01-09 11:09:10,930:INFO:Model: SVM - Linear Kernel
2024-01-09 11:09:15,168:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 603, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-01-09 11:09:36,183:INFO:Creating Dashboard logs
2024-01-09 11:09:36,189:INFO:Model: Quadratic Discriminant Analysis
2024-01-09 11:09:40,679:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-01-09 11:10:01,123:INFO:_master_model_container: 16
2024-01-09 11:10:01,123:INFO:_display_container: 2
2024-01-09 11:10:01,123:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=603, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-01-09 11:10:01,123:INFO:compare_models() successfully completed......................................
